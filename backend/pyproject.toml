[tool.poetry]
name = "archigetter"
version = "0.1.0"
description = "Backend for trashTV"
authors = ["Me <2070@trash-economy.io>"]

[tool.poetry.dependencies]
python = "^3.9"
python-json-logger = "^2.0.1"
pydantic = {extras = ["dotenv"], version = "^1.8.2"}
fastapi = "^0.65.1"
uvicorn = {extras = ["standard"], version = "^0.14.0"}
fastapi-utils = "^0.2.1"
SQLAlchemy = {version = ">=1.4,<1.4.23", extras = ["mypy"]}
psycopg2-binary = "^2.9.1"
httpx = "^0.20.0"
bs4 = "^0.0.1"


[tool.poetry.dev-dependencies]
pytest = "^6.0"
pytest-mypy = "^0.8.0"
pytest-pydocstyle = "^2.2.0"
pytest-sugar = "^0.9.4"
pytest-flake8 = "^1.0.6"
flake8-print = "^4.0.0"
darglint = "^1.5.8"
mypy = "^0.910"
pytest-cov = {extras = ["toml"], version = "^3.0.0"}
requests = "^2.26.0"
pre-commit = "^2.15.0"
poethepoet = "^0.10.0"
isort = "^5.9.3"
black = "^21.9b0"
flake8 = "^3"
pytest-datadir = "^1.3.1"
sqlalchemy-stubs = "^0.4"
respx = "^0.18.0"
pytest-asyncio = "^0.16.0"
flake8-bugbear = "^21.9.2"


[tool.poe.tasks]
"_black:check" = "poetry run black . --check"
"_black:fix" = "poetry run black ."

"_isort:check" = "poetry run isort . --check"
"_isort:fix" = "poetry run isort ."

"style:check" = {sequence = ["_black:check", "_isort:check"], help = "Check the app code style" }
"style:fix" = {sequence = ["_black:fix", "_isort:fix"], help = "Check and autofix the app code style" }

_install = "poetry install"
setup-precommit-hook = { cmd = "poetry run pre-commit install", help = "Setup the git pre-commit hock that checks for style errors" }

install = {sequence = ["_install", "setup-precommit-hook"], help = "Install all application dependencies"}
test = {cmd = "poetry run pytest", help = "Run application tests" }
dev = {cmd = "poetry run python -X dev -m archigetter", help = "Start the application in development mode (with hot reload)" }
start = {cmd = "poetry run uvicorn archigetter.api:app --host 0.0.0.0 --port 80", help = "Start the application in production mode" }

[tool.pydocstyle]
convention = "numpy"

[tool.coverage.report]
fail_under = 80
show_missing = true

[tool.mypy]
plugins = ["sqlmypy"]
python_version = "3.6"
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_incomplete_defs = true
check_untyped_defs = true
show_error_context = true
strict = true
disallow_untyped_calls = false
disallow_subclassing_any = false

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 119

[tool.black]
line-length = 119

[tool.pytest.ini_options]
addopts = """\
    --cov=src \
    --cov-report term-missing \
    --cov-branch \
    --flake8 \
    --pydocstyle \
    --mypy \
    """

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
